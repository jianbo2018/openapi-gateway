@startuml
'https://plantuml.com/sequence-diagram
'autonumber

participant client
participant "openapi-gateway" as server
participant "backend-service" as backend

client->server++: http request

'进入FilterChain
server->server++: HttpRequest进入GatewayFilterHandler本质上是一个\nnetty handler，handler持有的filter chain负责处理流经\n的request
return

'聚合请求前置处理
server->server++: AggregateFilter：如果聚合请求，则该filter负责解析具体的path
return

'请求path定位
server->server++: ServiceDiscoveryFilter：请求path定位，找到具体的rpc service
return

'参数校验
server->server++: rest服务基本参数校验，如长度、非法字符等
return

'权限校验
server->server++: 如果该请求服务需要鉴权/认证，则在此处首先执行请求鉴权/认证
return

'发起请求
server->server++: "openapi-gateway"调用后端服务，如果是聚合服务也在同一\n个线程中调用
server->backend++: 发起rpc请求，如果是聚合请求，则CompletableFuture等待
return rpc response object
return

'生成HttpResponse
server->server++: 如果以上filter有任何一个地方出现异常，则会从threadLocal处获取\n错误信息并在此处封装错误信息。\n如果没有，则将后端服务返回的对象封装为http response
return

server->client: ctx.writeAndFlush(response)写回client

@enduml